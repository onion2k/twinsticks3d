/*
auto-generated by: https://github.com/pmndrs/gltfjsx
GOOGLE_processor_version: 294144208
*/
import React, { useState, useEffect, useRef } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'

export default function Model(props) {
  const ref = useRef()
  const [pollGamepads, setPollGamepads] = useState(false);
  const { nodes, materials } = useGLTF('models/plane/1397 Jet.gltf')

  useEffect(()=>{
    window.addEventListener("gamepadconnected", (event) => {
      console.log("A gamepad connected");
      setPollGamepads(true);
    });
    
    window.addEventListener("gamepaddisconnected", (event) => {
      console.log("A gamepad disconnected");
      setPollGamepads(false);
    });
  }, [])

  useFrame(({ clock, camera }) => {
    // const time = state.clock.getElapsedTime()

    if (pollGamepads) {
      const gp = navigator.getGamepads();
      ref.current.rotation.z = gp[0].axes[0] * 0.5 // roll
      ref.current.rotation.x = gp[0].axes[1] * -0.5 // pitch
      
      ref.current.translateZ( 0.2 + (gp[0].buttons[7].value * 0.5) ) // thrust

      if (gp[0].axes[0]) {
        // TODO change to world axis rotation
        ref.current.rotation.y += gp[0].axes[0] * -0.1
      }

    }

    ref.current.matrix.needsUpdate = true
    camera.position = ref.current.position
  })

  return (
    <group position={[0, 9.0, 0]} ref={ref} {...props}>
      <group scale={[ 0.05, 0.05, 0.05 ]}>
        <mesh material={materials.Mat} geometry={nodes['node-0'].geometry} />
      </group>
    </group>
  )
}

useGLTF.preload('models/plane/1397 Jet.gltf')
